#!/bin/bash
# vector sigma 2018

bold=$(tput bold)
normal=$(tput sgr0)

# configuration file to keep personal settings to build the project
if [[ -f ~/hwconf.profile ]]; then
  echo 'sourcing custom hwconf.profile'
  source ~/hwconf.profile # user configuration file in Home folder. Takes precedence
elif [[ -f hwconf.profile ]]; then
  # standard configuration file, can be overwritten during updates,
  # make a copy in Home directory for customizations
  source hwconf.profile
fi

SRCROOT="$(dirname $0)"
cd "${SRCROOT}"

quiet="-quiet"
arch=""
force64BitOnly=1
branchPath=${branchPath:-'trunk'}
UseModernBuildSystem=""

PREFERRED_SDK=${PREFERRED_SDK:-macosx10.11}
PREFERRED_CONF=${PREFERRED_CONF:-'Release 10.6'}
PREFERRED_CONF_APPS=${PREFERRED_CONF_APPS:-'Release'}

VERSION=$(svn info | grep '^Revision:' | tr -cd [:digit:])

checkDefaultSDK() {
if [[ -z "$(xcodebuild -showsdks | grep $PREFERRED_SDK)" ]]; then
  PREFERRED_SDK=macosx
  echo "   ..using the latest available sdk"
else
  echo "   ..using the sdk: $PREFERRED_SDK"
fi
}

# HWMonitorSMC.app v2 can be compiled only with Xcode 9.4.1 + and swift 4.2 or 5+ (at least 5.0 is tested)
buildv2=0
xver=$(/usr/bin/xcodebuild -version | grep 'Xcode' | awk '{print $NF}')
case "$xver" in
    1*)
        UseModernBuildSystem='-UseModernBuildSystem=0'
        buildv2=1
    ;;
    9.4.1)
        buildv2=1
    ;;
    *)
        quiet=""
        buildv2=0
    ;;
esac

if [[ $force64BitOnly -eq 1 ]]; then
  arch='ARCHS=x86_64 VALID_ARCHS=x86_64 ONLY_ACTIVE_ARCH=YES'
fi

if [[ "${1}" == clean ]]; then
  rm -rf compilations package/utils/partutil/build package/utils/seticon/build \
         "${branchPath}"/hwmonitor/build "${branchPath}"/hwmonitor2/build "${branchPath}"/build
  exit 0
fi

rm -rf compilations/Extensions
rm -rf compilations/HWMonitorSMC
rm -rf compilations/HWMonitorSMC2

mkdir -p compilations/Extensions
mkdir -p compilations/HWMonitorSMC
mkdir -p compilations/HWMonitorSMC2
mkdir -p compilations/Extensions_SYMROOT
mkdir -p compilations/HWMonitorSMC_SYMROOT
mkdir -p compilations/HWMonitorSMC2_SYMROOT

cd "${branchPath}"

echo "${bold}** Using HWSensor $(basename ${branchPath}) **${normal}"

if [[ -d ../kexts_prebuilt ]]; then
  # building kernel extensions
  echo "${bold}** Using HWSensor's pre built extensions **${normal}"
  cp -R ../kexts_prebuilt/*.kext "${SRCROOT}/compilations/Extensions/"

else
  # building kernel extensions
  echo "${bold}** Building HWSensor's extensions r${VERSION} **${normal}"
  checkDefaultSDK
  xcodebuild  $arch $quiet \
              -project HWSensors.xcodeproj \
              -IDEBuildOperationMaxNumberOfConcurrentCompileTasks=`sysctl -n hw.ncpu` \
              -sdk $PREFERRED_SDK \
              -configuration "${PREFERRED_CONF}" \
              ALWAYS_SEARCH_USER_PATHS=0 RUN_CLANG_STATIC_ANALYZER=0 $UseModernBuildSystem \
              SYMROOT="${SRCROOT}/compilations/Extensions_SYMROOT" || exit 1

  cp -R "${SRCROOT}/compilations/Extensions_SYMROOT/${PREFERRED_CONF}"/*.kext \
                                          "${SRCROOT}/compilations/Extensions/"
fi

echo
for i in "${SRCROOT}/compilations/Extensions"/* ; do
  if [[ -d "$i" ]]; then
    kext_ver=$(defaults read "${i}"/Contents/Info CFBundleVersion)
    echo $(basename "$i") "(${kext_ver})"
  fi
done
echo
if [[ -n $1 ]]; then
  open "${SRCROOT}/compilations/Extensions"
  exit 0
fi

# building HWMonitorSMC.app v1.x
echo "${bold}** Building HWMonitorSMC.app v1 **${normal}"
cd  "${SRCROOT}/${branchPath}/hwmonitor"
xcodebuild $arch $quiet -project HWMonitorSMC.xcodeproj \
                -IDEBuildOperationMaxNumberOfConcurrentCompileTasks=`sysctl -n hw.ncpu` \
                -sdk macosx \
                -configuration "${PREFERRED_CONF_APPS}" \
                SYMROOT="${SRCROOT}/compilations/HWMonitorSMC_SYMROOT" || exit 1

cp -R "${SRCROOT}/compilations/HWMonitorSMC_SYMROOT/${PREFERRED_CONF_APPS}"/HWMonitorSMC.app \
                                              "${SRCROOT}/compilations/HWMonitorSMC/"

# building HWMonitorSMC.app v2.x
if [ "$buildv2" -eq "1" ]; then
  # HWMonitorSMC.app is coded in swift 5 (compatible with 4.2)
  # swift 5 is preferred for the stable ABI (Xcode 10.2 +)
  echo "${bold}** Building HWMonitorSMC.app v2 **${normal}"
  swiftVer=$(swift --version 2> /dev/null | grep version | awk '{print $4}')
  case "${swiftVer}" in
    [1-3].* | 4.[0-1]*)
         echo "swift $swiftVer too old, let see if Xcode $xver can downgrade the code.."
    ;;
    4.2 | [5-9].*)
        echo "swift $swiftVer will be used.."
    ;;
    *)
        echo "unknown swift \"${swiftVer}\" version, falling back to 4.2.."
        swiftVer=4.2
    ;;
  esac

  cd  "${SRCROOT}/${branchPath}/hwmonitor2"
  xcodebuild $arch $quiet -project HWMonitorSMC.xcodeproj \
                    -IDEBuildOperationMaxNumberOfConcurrentCompileTasks=`sysctl -n hw.ncpu` \
                    -sdk macosx \
                    -configuration "${PREFERRED_CONF_APPS}" \
                    SWIFT_VERSION=$swiftVer \
                    SYMROOT="${SRCROOT}/compilations/HWMonitorSMC2_SYMROOT" || exit 1
  cp -R "${SRCROOT}/compilations/HWMonitorSMC2_SYMROOT/${PREFERRED_CONF_APPS}"/HWMonitorSMC2.app \
                                                          "${SRCROOT}/compilations/HWMonitorSMC2/"
else
  echo "HWMonitorSMC.app v2.x requires Xcode 9.4.1 +"
fi

exit 0
